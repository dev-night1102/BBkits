const e=t=>{try{if(t==null||t==="")return"R$ 0,00";const r=parseFloat(t);return isNaN(r)?"R$ 0,00":new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL",minimumFractionDigits:2,maximumFractionDigits:2}).format(r)}catch(r){return console.error("Error formatting Brazilian currency:",r),"R$ 0,00"}},o=t=>{try{if(t==null||t==="")return"0,00";const r=parseFloat(t);return isNaN(r)?"0,00":r.toLocaleString("pt-BR",{minimumFractionDigits:2,maximumFractionDigits:2})}catch(r){return console.error("Error formatting Brazilian currency number:",r),"0,00"}},a=t=>{try{if(!t||t==="")return"";const r=t.replace(/[^\d]/g,"");if(!r)return"0,00";const n=parseFloat(r)/100;return isNaN(n)?"0,00":n.toLocaleString("pt-BR",{minimumFractionDigits:2,maximumFractionDigits:2})}catch(r){return console.error("Error formatting Brazilian currency input:",r),"0,00"}},c=t=>{try{if(!t||t==="")return"0";let r=t.replace(/[R$\s]/g,"");r=r.replace(",",".");const n=r.split(".");n.length>2&&(r=n.slice(0,-1).join("")+"."+n[n.length-1]);const i=parseFloat(r);return isNaN(i)?"0":i.toString()}catch(r){return console.error("Error parsing Brazilian currency:",r),"0"}};export{o as a,a as b,e as f,c as p};
